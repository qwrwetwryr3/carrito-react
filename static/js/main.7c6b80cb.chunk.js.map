{"version":3,"sources":["Componentes/FichaProducto.js","Componentes/Producto.js","Componentes/Carro.js","Componentes/Navegacion.js","App.js","serviceWorker.js","index.js"],"names":["FichaProducto","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","modal","listaCarrito","stock","toggle","bind","assertThisInitialized","agregarCarrito","setState","prevState","push","titulo","precio","alert","document","getElementById","innerText","length","react_default","a","createElement","Container","Button","onClick","Modal","isOpen","ModalHeader","ModalBody","CardImg","src","imagen","descripcion","ModalFooter","className","color","React","Component","Producto","Col","sm","Card","body","outline","CardBody","CardTitle","CardSubtitle","CardText","src_Componentes_FichaProducto","Carro","popoverOpen","total","map","parseInt","arregloCarrito","i","id","Badge","Popover","target","placement","PopoverHeader","PopoverBody","Table","Intl","NumberFormat","format","sumaTotal","Navegacion","Navbar","light","expand","NavbarBrand","href","Nav","navbar","NavItem","Componentes_Carro","console","log","listaProductos","App","arregloComponentes","src_Componentes_Producto","key","Componentes_Navegacion","Row","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"05KA6DeA,cAtDX,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,QACKI,MAAM,CAACC,OAAM,EAAOC,iBAAcC,MAAOX,EAAMA,MAAMW,OAE1DV,EAAKW,OAAOX,EAAKW,OAAOC,KAAZX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KACZA,EAAKc,eAAed,EAAKc,eAAeF,KAApBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KALNA,wEASdG,KAAKY,SAAS,SAAAC,GAAS,MAClB,CAACR,OAAOQ,EAAUR,kDAIvBC,IAAaQ,KAAK,CACdC,OAAUf,KAAKJ,MAAMA,MAAMmB,OAC3BC,OAAUhB,KAAKJ,MAAMA,MAAMoB,SAE/BhB,KAAKY,SAAS,SAAAC,GAAS,MAAG,CAC1BR,OAAQQ,EAAUR,SACI,IAAnBL,KAAKI,MAAMG,MACVP,KAAKY,SAAS,SAAAC,GAAS,MAAG,CAC1BN,MAAOM,EAAUN,MAAM,KAEvBU,MAAM,iBAEEC,SAASC,eAAe,UAC9BC,UAAUd,IAAae,wCAI7B,OACAC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACAH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,QAAS3B,KAAKQ,QAAtB,aAGAc,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOC,OAAQ7B,KAAKI,MAAMC,OACtBiB,EAAAC,EAAAC,cAACM,EAAA,EAAD,KAAc9B,KAAKJ,MAAMA,MAAMmB,QAC/BO,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACIT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAASC,IAAKjC,KAAKJ,MAAMA,MAAMsC,SAC/BZ,EAAAC,EAAAC,cAAA,mEACCxB,KAAKJ,MAAMA,MAAMuC,YAClBb,EAAAC,EAAAC,cAAA,4CAAmCF,EAAAC,EAAAC,cAAA,SAAIxB,KAAKJ,MAAMA,MAAMoB,QAAxD,UACAM,EAAAC,EAAAC,cAAA,gBAAOF,EAAAC,EAAAC,cAAA,SAAIxB,KAAKI,MAAMG,OAAtB,4CAEJe,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAaC,UAAU,eACnBf,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQY,MAAM,UAAUX,QAAS3B,KAAKW,gBAAtC,sBACAW,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQY,MAAM,YAAYX,QAAS3B,KAAKQ,QAAxC,6BAhDY+B,IAAMC,WCcnBC,mLAbX,OAAOnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAKC,GAAG,KACXrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMP,UAAU,OAAOQ,MAAI,EAACC,SAAO,EAACR,MAAM,WAC1ChB,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAASC,IAAKjC,KAAKJ,MAAMsC,SACzBZ,EAAAC,EAAAC,cAACuB,EAAA,EAAD,KACIzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,KAAYhD,KAAKJ,MAAMmB,QACvBO,EAAAC,EAAAC,cAACyB,EAAA,EAAD,KAAc3B,EAAAC,EAAAC,cAAA,oBAAd,IAA8BxB,KAAKJ,MAAMoB,QACzCM,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,KAAWlD,KAAKJ,MAAMuC,aACtBb,EAAAC,EAAAC,cAAC2B,EAAD,CAAevD,MAAOI,KAAKJ,kBAThB2C,IAAMC,uGCgEdY,cAjEX,SAAAA,IAAa,IAAAvD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoD,IACTvD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsD,GAAAjD,KAAAH,QACKI,MAAM,CACPiD,aAAY,EACZ/C,kBAEJT,EAAKW,OAAOX,EAAKW,OAAOC,KAAZX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KANHA,wEASTG,KAAKY,SAAS,SAAAC,GAAS,MAAG,CACtBwC,aAAcxC,EAAUwC,mDAI5B,IAAIC,EAAM,EACItD,KAAKI,MAAME,aAAaiD,IAClC,SAACjD,GAAgBgD,GAAqC,IAA9BE,SAASlD,EAAaU,UAClD,OAAOsC,mCAGP,IAAMG,EAAezD,KAAKI,MAAME,aAAaiD,IACzC,SAACjD,EAAcoD,GACX,OACIpC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAMkC,GAAG,GACTpC,EAAAC,EAAAC,cAAA,UAAKlB,EAAaS,QAClBO,EAAAC,EAAAC,cAAA,UAAKlB,EAAaU,WAKlC,OACIM,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQiC,GAAG,WAAWrB,MAAM,QAC5BhB,EAAAC,EAAAC,cAAA,QAAMa,UAAU,kBAAhB,iBACAf,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAOtB,MAAO,YAAYqB,GAAG,UAAUrD,IAAae,SAEpDC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAASC,OAAO,WAAWC,UAAU,SACrClC,OAAQ7B,KAAKI,MAAMiD,YACnB7C,OAAQR,KAAKQ,QACTc,EAAAC,EAAAC,cAACwC,EAAA,EAAD,2BACA1C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,KACI3C,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,KACI5C,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,eACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,sBAGRF,EAAAC,EAAAC,cAAA,aACKiC,GAELnC,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAK2C,KAAKC,aAAa,SAASC,OAAOrE,KAAKsE,aAA5C,mBAzDZ/B,IAAMC,WCeX+B,mLAbP,OACIjD,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAQlC,MAAM,QAAQmC,OAAK,EAACC,OAAO,MAC/BpD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAaC,KAAK,KAAK5E,KAAKJ,MAAMmB,QAClCO,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAKxC,UAAU,UAAUyC,QAAM,GAC3BxD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,KACGzD,EAAAC,EAAAC,cAACwD,EAAD,gBAPEzC,IAAMC,mBCI/ByC,QAAQC,IAAIC,SAmCGC,cAjCb,SAAAA,IAAa,IAAAvF,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoF,IACXvF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsF,GAAAjF,KAAAH,QAEKI,MAAM,CACT+E,oBAJStF,wEAQX,IAAMwF,EAAmBrF,KAAKI,MAAM+E,eAAe5B,IACjD,SAAC4B,EAAezB,GAChB,OACEpC,EAAAC,EAAAC,cAAC8D,EAAD,CACAC,IAAK7B,EACL3C,OAAQoE,EAAepE,OACvBmB,OAAQiD,EAAejD,OACvBC,YAAagD,EAAehD,YAC5BnB,OAAQmE,EAAenE,OACvBT,MAAO4E,EAAe5E,UAK5B,OACEe,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACgE,EAAD,CAAYzE,OAAO,wCACnBO,EAAAC,EAAAC,cAACiE,EAAA,EAAD,KACGJ,WA3BS9C,IAAMC,WCIJkD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iECXNC,IAASC,OAAO1E,EAAAC,EAAAC,cAACyE,EAAD,MAAS/E,SAASC,eAAe,SD0H3C,kBAAmB+E,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.7c6b80cb.chunk.js","sourcesContent":["import React from 'react';\r\nimport {CardImg, Modal, Button, Container, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\nimport './FichaProducto.css';\r\nimport {listaCarrito} from '../listaCarrito.json';\r\n\r\n\r\nclass FichaProducto extends React.Component{\r\n    constructor(props){\r\n        super();\r\n        this.state={modal:false, listaCarrito, stock: props.props.stock};\r\n\r\n        this.toggle=this.toggle.bind(this);\r\n        this.agregarCarrito=this.agregarCarrito.bind(this);\r\n        \r\n    }\r\n    toggle(){\r\n        this.setState(prevState=>\r\n            ({modal:!prevState.modal}));\r\n    }\r\n\r\n    agregarCarrito(){\r\n        listaCarrito.push({\r\n            \"titulo\": this.props.props.titulo,\r\n            \"precio\": this.props.props.precio\r\n        });\r\n        this.setState(prevState=>({\r\n        modal: !prevState.modal}));\r\n        if(this.state.stock!==0){\r\n            this.setState(prevState=>({\r\n            stock: prevState.stock-1}));\r\n        }else{\r\n            alert('Stock Agotado')\r\n        }\r\n        const badge=document.getElementById(\"Badge1\");\r\n        badge.innerText=listaCarrito.length\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n        <Container>\r\n        <Button onClick={this.toggle}>\r\n            Ver ficha\r\n        </Button>\r\n        <Modal isOpen={this.state.modal}>\r\n            <ModalHeader>{this.props.props.titulo}</ModalHeader>\r\n            <ModalBody>\r\n                <CardImg src={this.props.props.imagen}/>\r\n                <p>El detalle del producto seleccionado es el siguiente: </p>\r\n                {this.props.props.descripcion}\r\n                <p>Este producto tiene un valor de <b>{this.props.props.precio}</b>pesos.</p>\r\n                <p>Hay <b>{this.state.stock}</b> unidades de este producto disponibles.</p>\r\n            </ModalBody>\r\n            <ModalFooter className=\"modalFooter\">\r\n                <Button color=\"primary\" onClick={this.agregarCarrito}>Agregar al carrito</Button>\r\n                <Button color=\"secondary\" onClick={this.toggle}>Volver atr√°s</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n        </Container>\r\n        );\r\n    }\r\n}\r\nexport default FichaProducto;","import React from 'react';\r\nimport {Button,CardText,CardSubtitle,CardTitle,\r\n    CardBody,CardImg,Col,Card} from 'reactstrap';\r\nimport'./Producto.css';\r\nimport FichaProducto from './FichaProducto';\r\nclass Producto extends React.Component{\r\n    render(){\r\n    return(<Col sm=\"4\">\r\n        <Card className=\"Card\" body outline color=\"primary\">\r\n        <CardImg src={this.props.imagen}/>\r\n        <CardBody>\r\n            <CardTitle>{this.props.titulo}</CardTitle>\r\n            <CardSubtitle><b>Price: </b> {this.props.precio}</CardSubtitle>\r\n            <CardText>{this.props.descripcion}</CardText>\r\n            <FichaProducto props={this.props}/>\r\n        </CardBody>\r\n        </Card>\r\n        </Col>);\r\n}\r\n}\r\nexport default Producto;","import React from 'react';\r\nimport {Popover,PopoverHeader,PopoverBody,Badge, Button, Table} from 'reactstrap';\r\nimport {listaCarrito} from '../listaCarrito';\r\nclass Carro extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            popoverOpen:false,\r\n            listaCarrito\r\n        };\r\n        this.toggle=this.toggle.bind(this);\r\n    }\r\n    toggle(){\r\n        this.setState(prevState=>({\r\n            popoverOpen: !prevState.popoverOpen\r\n        }));\r\n    }\r\n    sumaTotal(){\r\n        let total=0;\r\n        let sumaTotal=this.state.listaCarrito.map(\r\n            (listaCarrito)=>{total+=parseInt(listaCarrito.precio)*1000})\r\n        return(total)\r\n    }\r\n    render(){\r\n        const arregloCarrito=this.state.listaCarrito.map(\r\n            (listaCarrito, i) => {\r\n                return (\r\n                    <tr>\r\n                        <td>{(i+=1)}</td>\r\n                        <td>{listaCarrito.titulo}</td>\r\n                        <td>{listaCarrito.precio}</td>\r\n                    </tr>\r\n                );\r\n            }\r\n        )\r\n        return(\r\n            <div>\r\n                <Button id=\"Popover1\" color=\"info\">\r\n                <span className=\"material-icons\">shopping_cart</span>\r\n                <Badge color =\"secondary\" id=\"Badge1\">{listaCarrito.length}</Badge>\r\n                </Button>\r\n                <Popover target=\"Popover1\" placement=\"bottom\" \r\n                isOpen={this.state.popoverOpen} \r\n                toggle={this.toggle}>\r\n                    <PopoverHeader>Listado de compras</PopoverHeader>\r\n                    <PopoverBody>\r\n                        <Table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    <th>Producto</th>\r\n                                    <th>Precio</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {arregloCarrito}\r\n                            </tbody>\r\n                            <tfoot>\r\n                                <td>Total: </td>\r\n                                <td></td>\r\n                                <td>{Intl.NumberFormat(\"de-DE\").format(this.sumaTotal())}CLP</td>\r\n                            </tfoot>\r\n                        </Table>\r\n                    </PopoverBody>\r\n                </Popover>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Carro;","import React from 'react';\r\nimport {Navbar, NavItem,Nav,NavbarBrand, NavLink} from 'reactstrap';\r\nimport Carro from './Carro';\r\nclass Navegacion extends React.Component{\r\n    render(){\r\n        return(\r\n            <Navbar color=\"light\" light expand=\"xl\">\r\n                <NavbarBrand href=\"/\">{this.props.titulo}</NavbarBrand>\r\n                <Nav className=\"ml-auto\" navbar>\r\n                    <NavItem>\r\n                       <Carro/>\r\n                    </NavItem>\r\n                </Nav>\r\n            </Navbar>\r\n        );\r\n    }\r\n\r\n}\r\nexport default Navegacion;","import React from 'react';\nimport Producto from './Componentes/Producto';\nimport './App.css';\nimport{Container, Row} from 'reactstrap';\nimport Navegacion from './Componentes/Navegacion';\nimport {listaProductos} from './listaProductos.json';\n\nconsole.log(listaProductos);\nclass App extends React.Component {\n  constructor(){\n    super()\n\n    this.state={\n      listaProductos\n    };\n  }\n  render(){\n    const arregloComponentes=this.state.listaProductos.map(\n      (listaProductos,i) =>{\n      return(\n        <Producto\n        key={i}\n        titulo={listaProductos.titulo}\n        imagen={listaProductos.imagen}\n        descripcion={listaProductos.descripcion}\n        precio={listaProductos.precio}\n        stock={listaProductos.stock}\n        />\n      )\n    }\n    );\n  return (\n    <Container>\n      <Navegacion titulo=\"Mi primer sitio de compras en React\"/>\n      <Row>\n        {arregloComponentes}\n      </Row>\n    </Container>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}